# IterationMark holds a Students mark in an Iteration.
# it is created after the end of an Iteration, and the
# after the marking algorithm has geneated the pa_score
# for each student.
#
# The mark and pa_score attributes are not required,
# as different marking algorithms may not use both of
# them, or use only one of them at the time.
#
# @author [harrybournis]
#
# @!attribute [r] iteration_id
#   @return [Integer] The id of the iteration that the Student is
#     marked for.
#
# @!attribute [r] student_id
#   @return [Integer] The id of the Student that receives the marks.
#
# @!attribute mark
#   @return [Integer] The mark of the student for this iteration.
#     Must be between 0 and 100.
#
# @!attribute pa_score
#   @return [Decimal] The mark modifier generated by the marking algorithm.
#     Indicates the part of the mark that should be awarded to this
#     student.
#
class IterationMark < ApplicationRecord
  belongs_to :student
  belongs_to :iteration

  validates_presence_of :iteration_id, :student_id
  validates_numericality_of :mark,
                            only_integer: true,
                            greater_than_or_equal_to: 0,
                            less_than_or_equal_to: 100,
                            allow_nil: true,
                            message: 'must be between 0 and 100'

  # Returns true if mark has been set for this record.
  #
  # @return [Boolean] True if mark attribute is not nil.
  #
  def marked?
    !mark.nil?
  end
end
